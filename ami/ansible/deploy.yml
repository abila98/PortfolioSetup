---
- name: Install Docker and run Docker image as a service
  hosts: all
  #become: true

  vars:
    docker_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          30616365646664623633326539383166366232643330663933646239623362643336393130393737
          6433376135386363353134633762356537636631386634630a666234616333323239336134313331
          64376364356535393863653032636334356437353664663561363937396363653735343437346436
          6233323439666462330a396665326264383136343837623734323936306163633735306665326332 
          33633164626132353537386465306466396630613966383232376566353364326637386461396663
          6263373939396537373562353666386636333561323362343235

  tasks:
    - name: Update Yum
      yum:
        name: '*'
        state: latest
      become: yes

    - name: Ensure unzip is installed
      yum:
        name: unzip
        state: present
      become: yes

    - name: Ensure jq is installed
      yum:
        name: jq
        state: present
      become: yes


    - name: Install Docker
      command: sudo yum install docker -y
      become: yes

    - name: Download Docker Compose
      command: "sudo curl -L 'https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64' -o /usr/bin/docker-compose"

    - name: Make Docker Compose executable
      command: "sudo chmod +x /usr/bin/docker-compose"

    - name: Download AWS CLI
      get_url:
        url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
        dest: "/tmp/awscliv2.zip"
        mode: '0644'
      become: yes

    - name: Unzip AWS CLI package
      unarchive:
        src: "/tmp/awscliv2.zip"
        dest: "/tmp/"
        remote_src: yes
      become: yes

    - name: Install AWS CLI
      command: "/tmp/aws/install"
      args:
        creates: "/usr/local/bin/aws"
      become: yes

    - name: Add ec2-user to the Docker group
      become: yes
      user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Start Docker service
      become: true
      service:
        name: docker
        state: started
        enabled: yes

    - name: Log in to Docker registry
      become: true
      docker_login:
        registry_url: "ghcr.io/abila98"
        username: "abila98"
        password: "{{ docker_password }}"

    - name: Create a folder
      file:
        path: /home/ec2-user/portfolio
        state: directory
        mode: 0755  

    - name: Copy a folder
      copy:
        src: ./extra/
        dest: /home/ec2-user/portfolio

    - name: Change ownership
      become: true
      file:
        path: /home/ec2-user/portfolio  
        state: directory
        owner: ec2-user
        group: docker
        mode: 0755

    - name: Change mode of shell scripts
      become: true
      file:
        path: "{{ item }}"
        mode: u+x
      loop:
        - /home/ec2-user/portfolio/secret.sh
        - /home/ec2-user/portfolio/service.sh

    - name: Run shell script with shell module
      become: true
      shell: /home/ec2-user/portfolio/service.sh

    - name: Reload systemd daemon
      become: true
      command: systemctl daemon-reload
    
    - name: Enable the service
      become: true
      systemd:
        name: portfolio
        enabled: yes

